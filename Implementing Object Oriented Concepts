Aim
Creating an Account class which has deposit() and withdraw() methods
Algorithm :
Step 1: Start the Program 
Step 2: Create Class 
Step 3: Declare the Input and Output Variables 
Step 4: Create object and access the method 
Step 5: Implement it with return type and without parameter list
Step 6: Implement it with return type and with parameter list 
Step 7: Implement the constructor by creating classes and objects
Program :
class Account
{ 
int acc_no; 
String name; 
float amount; 
//Method to initialize object 
void insert(int a,String n,float amt)
{ 
acc_no=a; 
name=n; 
amount=amt; 
}
void deposit(float amt)
{
 
amount=amount+amt;
System.out.println(amt+" deposited");
}
//withdraw method
void withdraw(float amt)
{
if(amount<amt)
{
System.out.println("Insufficient Balance");
}
else
{
amount=amount-amt;
System.out.println(amt+" withdrawn");
}
}
void checkBalance()
{
System.out.println("Balance is: "+amount);
}
void display()
{
System.out.println(acc_no+" "+name+" "+amount);
}
}
//Creating a test class to deposit and withdraw amount
class TestAccount
 
{
public static void main(String[] args){
Scanner scan=new Scanner(System.in);
int id =scan.nextInt();
String name =scan.next();
Double amt=scan.nextDouble();
Account a1=new Account();
a1.insert();
a1.display();
a1.checkBalance();
a1.deposit(40000);
a1.checkBalance();
a1.withdraw(15000);
a1.checkBalance();
}}
Output :
832345 Ankit 1000.0
Balance is: 1000.0
40000.0 deposited Balance is: 41000.0 15000.0 withdrawn Balance is: 26000.0
